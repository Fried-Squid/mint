-- Long mining test script
print("=== Long Mining Test ===")
print("This test will run continuous mining until:")
print("  1. The ore sack is full, or")
print("  2. The turtle runs out of fuel")
print("")

-- Load the config
local config = require("config")

-- Display current minerstate for reference
print("Current minerstate information:")
if fs.exists("mint/.minerstate") then
  local minerstate = dofile("mint/.minerstate")
  print("  Step: " .. (minerstate.step or "unknown"))
  print("  Substep: " .. (minerstate.substep or "unknown"))
  print("  Lookdir: " .. (minerstate.lookdir or "unknown"))
  print("  Zdir: " .. (minerstate.zdir or "unknown"))
else
  print("No existing minerstate found.")
end
print("Using existing minerstate - no changes made")

-- Print initial fuel status
local fuel_level = turtle.getFuelLevel()
print("Initial fuel level: " .. (fuel_level == "unlimited" and "Unlimited" or fuel_level))

-- Print mining parameters from config
print("Mining parameters:")
print("- Fuel threshold: " .. config.dotenv.fuel_threshold)
print("- Ore slots: " .. config.dotenv.ore_slots)
print("- Fuel slots: " .. config.dotenv.fuel_slots)
print("- Peripheral slots: " .. config.dotenv.peripheral_slots)
print("")

print("Starting continuous mining operation...")
print("Press Ctrl+T to terminate if needed")
print("")

-- Run the miner program
shell.run("miner")

print("")
print("=== Long Mining Test Complete ===")

-- No restoration needed since we didn't modify the minerstate
print("Minerstate was not modified during this test.")

print("Test finished.")
